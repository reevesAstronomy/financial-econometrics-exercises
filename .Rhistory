library(tseries)
set.seed(0)
lags <- 0:20 # array of lag values
rho_X <- c(c(1, 2/3, 1/6), rep(0,times=(21-3))) # my theoretical calculation of autocorrelation rho_X
get_X_t = function(len) {
n = len
Z_t <- rnorm(n+2)
X_t <- Z_t[1:n]+2*Z_t[2:(n+1)]+Z_t[3:(n+2)]
return(X_t)
}
n=100
X_t = get_X_t(n)
acf(X_t,lag.max=20, type="correlation")
points(lags, rho_X)
n=1000
X_t = get_X_t(n)
acf(X_t,lag.max=20, type="correlation")
points(lags, rho_X)
n=100
acf_mat <- matrix(NA, nrow=1000, ncol=21)
for(i in 1:1000) {
X_t = get_X_t(n)
acf_mat[i,] = as.vector(acf(X_t,lag.max=20,plot=FALSE,type="correlation")$acf) #[2:21]
acf_list[[i]] = acf(X_t,lag.max=20,plot=FALSE,type="correlation")$acf
}
n=100
acf_mat <- matrix(NA, nrow=1000, ncol=21)
for(i in 1:1000) {
X_t = get_X_t(n)
acf_mat[i,] = as.vector(acf(X_t,lag.max=20,plot=FALSE,type="correlation")$acf) #[2:21]
}
acf_mean = colMeans(acf_mat)
plot(0:20, acf_mean, type="h", xlim=c(0, 20), ylim=c(min(acf_mean), max(acf_mean)),
xlab="Lag", ylab="Autocorrelation", main="Mean ACF")
abline(h=0, lty=2)
points(lags, rho_X)
library(rmarkdown)
render("Financial econometrics - H1 - autocorrelation function.rmd", "Financial econometrics - H1 - autocorrelation function.md")
library(rmarkdown)
render("Financial econometrics - H1 - autocorrelation function.rmd", "test.md")
library(rmarkdown)
render("Financial econometrics - H1 - autocorrelation function.rmd", "Financial econometrics - H1 - autocorrelation function")
library(rmarkdown)
render("Financial econometrics - H1 - autocorrelation function.rmd", "test")
library(rmarkdown)
render("Financial econometrics - H1 - autocorrelation function.rmd", "github_document")
ls
ls
list.files()
library(rmarkdown)
render("H1_autocorrelation_function.Rmd", "github_document")
library(tseries)
set.seed(0)
lags <- 0:20 # array of lag values
rho_X <- c(c(1, 2/3, 1/6), rep(0,times=(21-3))) # my theoretical calculation of autocorrelation rho_X
get_X_t = function(len) {
n = len
Z_t <- rnorm(n+2)
X_t <- Z_t[1:n]+2*Z_t[2:(n+1)]+Z_t[3:(n+2)]
return(X_t)
}
n=100
X_t = get_X_t(n)
acf(X_t,lag.max=20, type="correlation")
points(lags, rho_X)
n=1000
X_t = get_X_t(n)
acf(X_t,lag.max=20, type="correlation")
points(lags, rho_X)
n=100
acf_mat <- matrix(NA, nrow=1000, ncol=21)
for(i in 1:1000) {
X_t = get_X_t(n)
acf_mat[i,] = as.vector(acf(X_t,lag.max=20,plot=FALSE,type="correlation")$acf) #[2:21]
}
acf_mean = colMeans(acf_mat)
plot(0:20, acf_mean, type="h", xlim=c(0, 20), ylim=c(min(acf_mean), max(acf_mean)),
xlab="Lag", ylab="Autocorrelation", main="Mean ACF")
abline(h=0, lty=2)
points(lags, rho_X)
library(rmarkdown)
render(“H1_autocorrelation_function.Rmd", "github_document")
library(rmarkdown)
render(“H1_autocorrelation_function.Rmd", "github_document")
render("H1_autocorrelation_function.Rmd", "github_document")
list.files()
